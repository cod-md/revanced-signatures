{
  "$schema": "https://json-schema.org/draft-07/schema",
  "$id": "https://github.com/ReVancedTeam/revanced-signatures/blob/main/signatures.schema.json",
  "title": "Signatures",
  "description": "An ASM signature list for the Patcher.",
  "type": "object",
  "required": ["signatures"],
  "properties": {
    "signatures": {
      "$ref": "#/$defs/signatures",
      "description": "A list of signatures."
    }
  },
  "$defs": {
    "signature": {
      "type": "object",
      "required": [
        "name",
        "returns",
        "accessors",
        "parameters",
        "opcodes"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the method.\nDo not use the actual method name, instead try to guess what the method name originally was.\nIf you are unable to guess a method name, doing something like \"patch-name-1\" is fine too. For example: \"override-codec-1\"\nThis method name will be used to find the corresponding patch."
        },
        "returns": {
          "$ref": "#/$defs/javaType",
          "description": "The return type/signature of the method."
        },
        "accessors": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/javaAccessors"
          },
          "description": "The accessors of the method."
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/javaType"
          },
          "description": "The parameter types/signatures of the method."
        },
        "opcodes": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/javaOpcodes"
          },
          "minItems": 1,
          "description": "The opcode pattern of the method, used to find the method by signature scanning."
        }
      }
    },
    "signatures": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/signature"
      },
      "minItems": 1,
      "uniqueItems": true
    },
    "javaType": {
      "type": "string",
      "enum": [
        "V",

        "Z", "[Z", "[[Z",
        "B", "[B", "[[B",
        "C", "[C", "[[C",
        "S", "[S", "[[S",
        "I", "[I", "[[I",
        "J", "[J", "[[J",
        "F", "[F", "[[F",
        "D", "[D", "[[D",

        "O", "[O", "[[O"
      ]
    },
    "javaAccessors": {
      "type": "string",
      "enum": [
        "PUBLIC",
        "PRIVATE",
        "PROTECTED",
        "STATIC",
        "FINAL",
        "SYNCHRONIZED",
        "VOLATILE",
        "NATIVE",
        "INTERFACE",
        "ABSTRACT",
        "SYNTHETIC"
      ]
    },
    "javaOpcodes": {
      "type": "string",
      "enum": [
        "nop",
        "aconst_null",
        "iconst_m1",
        "iconst_0",
        "iconst_1",
        "iconst_2",
        "iconst_3",
        "iconst_4",
        "iconst_5",
        "lconst_0",
        "lconst_1",
        "fconst_0",
        "fconst_1",
        "fconst_2",
        "dconst_0",
        "dconst_1",
        "bipush",
        "sipush",
        "ldc",
        "iload",
        "lload",
        "fload",
        "dload",
        "aload",
        "iaload",
        "laload",
        "faload",
        "daload",
        "aaload",
        "baload",
        "caload",
        "saload",
        "istore",
        "lstore",
        "fstore",
        "dstore",
        "astore",
        "iastore",
        "lastore",
        "fastore",
        "dastore",
        "aastore",
        "bastore",
        "castore",
        "sastore",
        "pop",
        "pop2",
        "dup",
        "dup_x1",
        "dup_x2",
        "dup2",
        "dup2_x1",
        "dup2_x2",
        "swap",
        "iadd",
        "ladd",
        "fadd",
        "dadd",
        "isub",
        "lsub",
        "fsub",
        "dsub",
        "imul",
        "lmul",
        "fmul",
        "dmul",
        "idiv",
        "ldiv",
        "fdiv",
        "ddiv",
        "irem",
        "lrem",
        "frem",
        "drem",
        "ineg",
        "lneg",
        "fneg",
        "dneg",
        "ishl",
        "lshl",
        "ishr",
        "lshr",
        "iushr",
        "lushr",
        "iand",
        "land",
        "ior",
        "lor",
        "ixor",
        "lxor",
        "iinc",
        "i2l",
        "i2f",
        "i2d",
        "l2i",
        "l2f",
        "l2d",
        "f2i",
        "f2l",
        "f2d",
        "d2i",
        "d2l",
        "d2f",
        "i2b",
        "i2c",
        "i2s",
        "lcmp",
        "fcmpl",
        "fcmpg",
        "dcmpl",
        "dcmpg",
        "ifeq",
        "ifne",
        "iflt",
        "ifge",
        "ifgt",
        "ifle",
        "if_icmpeq",
        "if_icmpne",
        "if_icmplt",
        "if_icmpge",
        "if_icmpgt",
        "if_icmple",
        "if_acmpeq",
        "if_acmpne",
        "goto",
        "jsr",
        "ret",
        "tableswitch",
        "lookupswitch",
        "ireturn",
        "lreturn",
        "freturn",
        "dreturn",
        "areturn",
        "return",
        "getstatic",
        "putstatic",
        "getfield",
        "putfield",
        "invokevirtual",
        "invokespecial",
        "invokestatic",
        "invokeinterface",
        "invokedynamic",
        "new",
        "newarray",
        "anewarray",
        "arraylength",
        "athrow",
        "checkcast",
        "instanceof",
        "monitorenter",
        "monitorexit",
        "multianewarray",
        "ifnull",
        "ifnonnull"
      ]
    }
  }
}